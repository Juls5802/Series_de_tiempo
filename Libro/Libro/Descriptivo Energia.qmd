# Análisis del consumo de energía de la empresa PJM

```{r}
#| warning: false
#| echo: false
#| results: false
library(TSstudio)
library(readxl)
library(dplyr)
library(lubridate)
library(astsa)
library(feasts)
library(fable)
library(timetk)
library(tsibble)
library(zoo)
library(xts)
library(readxl)
library(tidyverse)
library(nonlinearTseries)
library(tseriesChaos) 
library(forecast)
library(plotly)
```

```{r}
#| warning: false
#| echo: false
#| results: false

# Carga de la base de datos
AEP_hourly<-read.csv("AEP_hourly.csv")
AEP_hourly$Datetime<-as.POSIXct(AEP_hourly$Datetime, format = "%Y-%m-%d %H:%M:%S")
AEP_hourly$fecha<-as.Date(AEP_hourly$Datetime)

energia <- AEP_hourly %>%
  group_by(fecha) %>%
  summarise(Energia = sum(AEP_MW))
energia<-energia[-5055,]
energia2<-ts(energia$Energia,start=c(2004,10,01),frequency=365.25)
```

Según lo observado en la serie de tiempo, visualmente se tiene:

-   **Heterocedasticidad marginal:** Se puede observar que la varianza de cada instante en la serie es casi la misma. Al parecer no es necesario estabilizar la varianza.
-   **Tendencia:** A simple vista se observa que, a medida que pasa el tiempo la serie oscila al rededor del mismo valor, por lo tanto, no es necesario estimar la tendencia.
-   **Componente estacional:** Se observan algunos patrones que se repiten con cierta periodicidad, lo cual hace que sea necesario observar la posible presencia de componente estacional y posteriormente estimarla.

## Estabilización de la varianza marginal

Como se observa en la gráfica de la serie de tiempo no es necesario realizar una estabilización de la varianza para continuar con el análisis descriptivo, sin embargo, para comprobar esto, se hace una transformación de Box-cox para ver que tanto se estabiliza la varianza. En la @fig-boxcox1energia se observa que se sugiere una transformación dado que 1 no está contenido en el intervalo.

```{r}
#| label: fig-boxcox1energia
#| fig-cap: >
#|    Gráfico de la verosimilitud en función del hiperparámetro lambda.
MASS::boxcox(lm(energia2 ~ 1),seq(-5, 5, length = 50))
abline(v = 1, col = "red", lty = 2)
```

En la siguiente salida se puede ver que el $\lambda$ sugerido es $-0.25$, como es un número negativo, se procede a hacer la transformación Box-Cox usando logaritmo natural.

```{r}
forecast::BoxCox.lambda(energia2, method ="loglik",lower = -1, upper = 3)
```

En la @fig-boxcox1lenergia a continuación se muestra que la serie en escala logarítmica nuevamente no tiene la varianza estabilizada, dado que no se contiene al 1.

```{r}
#| label: fig-boxcox1lenergia
#| fig-cap: >
#|    Gráfico de la verosimilitud para la serie en escala logarítmica, en función del hiperparámetro lambda.
lenergia2=log(energia2)
MASS::boxcox(lm(lenergia2 ~ 1),seq(-5, 5, length =  50))
abline(v = 1, col = "red", lty = 2)
```

Además, se puede notar en la @fig-sinconboxcoxenerg , que no hay una diferencia significativa entre la serie transformada y no transformada. Por lo que el análisis descriptivo se continúa usando los datos originales.

```{r}
#| label: fig-sinconboxcoxenerg
#| fig-cap: >
#|    Serie original y serie con transformación logarítmica.
par(mar = c(1,1,1,1))
par(mfrow=c(2,1),mar=c(3,3,3,3))
plot(energia2,main="Serie energía sin Transformar",cex.main=1)
plot(lenergia2,main="Serie energía con Transformación BoxCox",cex.main=1)
```

## Estimación de la tendencia

Como se observa en la gráfica de la serie de tiempo no es necesario realizar una estimación de la tendencia para continuar con el análisis descriptivo, sin embargo, se hace una estimación preliminar usando varios métodos, con el fin de comprobar que la serie sin tendencia no varía mucho.

### Tendencia lineal

```{r}
# Creación del objeto tibble
energia_1=energia %>% map_df(rev)
Fechas=as.Date(energia_1$fecha)
energia_xts=xts(x = energia_1$Energia,frequency = 365.25,order.by = Fechas)

# Creación objeto tssible a partir del objeto tibble
df_energia=data.frame(Energia=energia_1$Energia,fecha=energia_1$fecha)
tbl_energia=tibble(df_energia)
tbl_energia_format_fecha=tbl_energia
tsbl_energia=as_tsibble(tbl_energia_format_fecha,index=fecha)
```

En la siguiente salida se presenta el ajuste de una regresión lineal para estimar la tendencia. El $R^2$ indíca qué tan bien se ajusta la recta a los datos, en este caso tiene un valor de $0.058$, por lo que sugiere que no hay tendencia lineal.

```{r}
# Análisis de tendencia con regresion simple
summary(fit_e<-lm(energia2~time(energia2),na.action=NULL))
```

En la @fig-serietiempoenergiareglineal se presenta la serie de tiempo de la energía con la estimación lineal de la tendencia.

```{r}
#| label: fig-serietiempoenergiareglineal
#| fig-cap: >
#|    Gráfico de la serie de tiempo de la energía con la estimación lineal de la tendencia.

plot(energia2, main="Serie de tiempo de la energía diaria de una empresa estadounidense",
     cex.main=1,
     xlab="Tiempo ",
     ylab="Energía consumida",
     cex.lab=0.4)
abline(fit_e,col="darkcyan",lwd=2)
```

Posteriormente, se procede a eliminar la tendencia lineal, como se puede ver en la @fig-serietiempoenergiasintendreglineal .

```{r}
#| label: fig-serietiempoenergiasintendreglineal
#| fig-cap: >
#|    Gráfico de la serie de tiempo de la energía sin tendencia estimada con regresión lineal.

# Eliminación de la tendencia con la predicción la recta
ElimiTendenerg<-energia2-predict(fit_e)
plot(ElimiTendenerg,main="Serie energía sin tendencia",
     cex.main=1.3,
     xlab="Tiempo",
     ylab="Consumo de energía",
     cex.lab=0.4)
```

### Tendencia con promedios móviles

En la @fig-serietiempoenergiaprommovil , se muestra un ajuste de la tendencia con promedios móviles, como se puede ver, aparentemente hay una sobrestimación de la tendencia, ya que muestra comportamientos que no son tan visibles en la serie de tiempo original.

```{r}
#| label: fig-serietiempoenergiaprommovil
#| fig-cap: >
#|    Gráfico de la serie de tiempo de la energía sin tendencia estimada con promedios móviles.

# Descomposición filtro de promedios móviles
energia_decompo=decompose(energia2)
plot(energia_decompo)
```

### Tendencia con diferenciación

En la @fig-serietiempoenergiadiff se presentan los gráficos de las series sin tendencia, estimada con regresión lineal y con diferenciación respectivamente, se puede notar que la serie sin tendencia estimada con diferenciación impide ver los ciclos que se ven en la serie original.

```{r}
#| label: fig-serietiempoenergiadiff
#| fig-cap: >
#|    Gráfico de la serie de tiempo de la energía sin tendencia estimada con regresión lineal y diferenciación.

tsibble_energia<-as_tsibble(energia2)
par(mar = c(2,2,2,2))
par(mfrow=c(2,1))

plot(resid(fit_e), type="l", main="Sin tendencia lineal") 
plot(diff(energia2), type="l", main="Primera Diferencia") 
```

### Comparación de los ACF

En la @fig-serietiempoenergiaacf se puede notar un descenso rápido hacia 0 para las series original y sin tendencia estimada con regresión lineal, mientras que para la serie sin tendencia estimada con diferenciación, se puede apreciar mejor el ciclo estacional de aproximadamente 7 días.

```{r}
#| label: fig-serietiempoenergiaacf
#| fig-cap: >
#|    Gráficos de autocorrelación para la serie original, sin tendencia estimada con regresión lineal y con la primera diferencia.

# Gráficos de los ACF
par(mar = c(3,2,3,2))
par(mfrow=c(3,1))
acf(energia2, 60, main="ACF energia")
acf(resid(fit_e), 60, main="ACF Sin tendencia") 
acf(diff(energia2), 60, main="ACF Primera Diferencia")
```

Si bien se estima la tendencia con diferentes métodos, se decide trabajar con los datos originales, ya que no hay un cambio significativo en la serie cuando se elimina la tendencia.

## Estimación de la estacionalidad

### Detección de estacionalidad

En la @fig-serietiempoenergiaretardos se puede observar el gráfico de retardos para la serie original, es evidente que hay una asociación lineal más fuerte para el primer retardo, aunque para los demás retardos también se encuentra asociación lineal.

```{r}
#| label: fig-serietiempoenergiaretardos
#| fig-cap: >
#|    Gráficos de retardos para la serie de consumo de energía.

# Gráfica de retardos
par(mar = c(3, 2, 3, 2))
astsa::lag1.plot(energia2, 7,corr=F)
```

En la @fig-serietiempoenergiaretardosdiff se puede ver el gráfico de retardos para la serie sin tendencia estimada con diferenciación, aquí no es visible ninguna asociación lineal fuerte entre los rezagos.

```{r}
#| label: fig-serietiempoenergiaretardosdiff
#| fig-cap: >
#|    Gráficos de retardos para la serie sin tendencia estimada con diferenciación.

# Gráfica de retardos
astsa::lag1.plot(diff(energia2), 7,corr=F)
```

Adicionalmente se calcula el índice AMI, el cual se puede visualizar en la @fig-serietiempoenergiaami.

```{r}
#| label: fig-serietiempoenergiaami
#| fig-cap: >
#|    Gráfico del promedio de información mutua.

# Indice AMI 
tseriesChaos::mutual(energia2, partitions = 50, lag.max = 10, plot=TRUE) 
```

Es posible ver que el primer rezago reduce el estado de incertidumbre para la observación en el tiempo $t$.

```{r}
#| warning: false
energiasss<-rbind(energia,c("2018-08-03",0))
energia_df1<-energiasss
energia_df1$time = as.POSIXct(energia_df1$fecha, "%Y-%m-%d")
energia_df<-cbind(energia_df1[1:5054,1:2],energia_df1[2:5055,3])

energia_df$weekday <- wday(energia_df$time, label = TRUE, abbr = TRUE)
energia_df$month <- factor(month.abb[month(energia_df$time)], levels =   month.abb)
```

En la @fig-serietiempoenergiasubseriediar se presenta el gráfico de subseries diarias para la serie original, se puede ver que hay estacionalidad ya que el valor medio del día domingo por ejemplo, es menor al del resto de días.

```{r}
#| label: fig-serietiempoenergiasubseriediar
#| fig-cap: >
#|    Gráfica de subseries diarias.

# Gráfica de subseries semanal con datos originales
gg_subseries(tsbl_energia,y=Energia,period=7)
```

En la @fig-serietiempoenergiasubseriean se presenta el gráfico de subseries mensuales para la serie original, se puede ver que no hay ciclos estacionales mensuales, ya que todos tienen la misma media.

```{r}
#| label: fig-serietiempoenergiasubseriean
#| fig-cap: >
#|    Gráfica de subseries anuales.

# Gráfica de subseries anual con datos originales
gg_subseries(tsbl_energia,y=Energia,period=12)
```

### Periodograma

#### Para los datos originales

En la @fig-periodoriginenerg se presenta el periodograma para la serie original, el valor del periodo donde se maximiza el periodograma es $182.86$, es decir, aproximadamente, el ciclo es de medio año.

```{r}
#| label: fig-periodorginenerg
#| fig-cap: >
#|    Periodograma para la serie original.

# Periodograma Datos originales
spectrum(as.numeric(energia2),log='no')

PeriodogramaEnergia2=spectrum(as.numeric(energia2),log='no')
ubicacionenergia=which.max(PeriodogramaEnergia2$spec)

sprintf("El valor de la frecuencia donde se maximiza el periodograma para la serie es: %s",PeriodogramaEnergia2$freq[ubicacionenergia])

sprintf("El periodo correspondiente es aproximadamente: %s",1/PeriodogramaEnergia2$freq[ubicacionenergia])
```

#### Para la serie sin tendencia lineal

En la @fig-periodlinealenerg se presenta el periodograma para la serie sin tendencia lineal, el valor del periodo donde se maximiza el periodograma nuevamente es $182.86$, es decir, aproximadamente, el ciclo es de medio año.

```{r}
#| label: fig-periodlinealenerg
#| fig-cap: >
#|    Periodograma para la serie sin tendencia lineal.

# Periodograma sin tendencia lineal
spectrum(as.numeric(ElimiTendenerg),log='no')

PeriodogramaEnergia2_lineal=spectrum(as.numeric(ElimiTendenerg),log='no')
ubicacionlogenergia=which.max(PeriodogramaEnergia2_lineal$spec)

sprintf("El valor de la frecuencia donde se maximiza el periodograma para la serie es: %s",PeriodogramaEnergia2_lineal$freq[ubicacionlogenergia])

sprintf("El periodo correspondiente es aproximadamente: %s",1/PeriodogramaEnergia2_lineal$freq[ubicacionlogenergia])
```

#### Para la serie sin tendencia usando diferenciación

En la @fig-perioddiffenerg se presenta el periodograma para la serie sin tendencia estimada usando diferenciación, el valor del periodo donde se maximiza el periodograma es $3.5$, es decir, aproximadamente, el ciclo es de tres días.

```{r}
#| label: fig-perioddiffenerg
#| fig-cap: >
#|    Periodograma para la serie sin tendencia usando diferenciación.

# Periodograma diferenciación
spectrum(as.numeric(diff(energia2)),log='no')

PeriodogramaEnergia2_dif=spectrum(as.numeric(diff(energia2)),log='no')
ubicacionlogenergia=which.max(PeriodogramaEnergia2_dif$spec)

sprintf("El valor de la frecuencia donde se maximiza el periodograma para la serie es: %s",PeriodogramaEnergia2_dif$freq[ubicacionlogenergia])

sprintf("El periodo correspondiente es aproximadamente: %s",1/PeriodogramaEnergia2_dif$freq[ubicacionlogenergia])
```

### Estimación

Para estimar la estacionalidad se usan las componentes de Fourier. Fourier mostró que toda función periódica puede representarse como una suma de funciones sinusoidales de distinta amplitud y frecuencia. La idea entonces es generalizar el análisis anterior para un ciclo a suma de funciones armónicas con distintas frecuencias. Dada la serie de longitud $(T)$, se denomina periodo básico o de Fourier, a las fracciones exactas del tamaño muestral, es decir $[s_j=\frac{T}{j},\ \ j=1,2,\cdots,T/2]$.

El valor máximo de periodo básico se obtiene para $(j=1)$ y es $(T)$, es decir, se observa la onda una sola vez. El mínimo se obtiene para $(j=T/2)$ y es $2$ ya que no se puede observar periodos que duren menos de $2$ observaciones. Como antes, suele usarse las frecuencias en lugar de los periodos para el ajuste de los ciclos, así que las frecuencias básicas o de Fourier se define como $[f_j=\frac{j}{T}\ \ j=1,2,\cdots,T/2.]$

Así, $(1/T\leq f_j\leq 1/2)$, y el valor máximo sería $(f_j=0.5)$ y se conoce como la frecuencia Nyquist. Con esto, una serie de tiempo $(Z_t)$ que es periódica se puede representar mediante $[Z_t=\mu+\sum_{j=1}^{T/2}A_j\sin(\omega_j t)+\sum_{j=1}^{T/2}B_j\cos(\omega_j t)+a_t]$, para seleccionar la frecuencia que debe ser incluída para explicar la serie se usa el periodograma. Se puede verificar que la contribución de una onda a la varianza es dada por $(\frac{\hat{R}^2}{2})$, así que ondas asociadas con amplitudes grandes serán importantes en la explicación de la variabilidad de la serie, mientras que ondas asociadas con amplitudes bajas serán poco importantes. Los estimadores de los coeficientes $(A_j)$ y $(B_j)$ están dados por $\hat{A}_j=\frac{2}{T}\sum_{t=1}^{T}Z_t\sin(\omega_j t)$, $\hat{B}_j=\frac{2}{T}\sum_{t=1}^{T}Z_t\cos(\omega_j t)$ y $hat{R}_j=\hat{A}_j^2+\hat{B}_j^2$, donde $(\omega_j=2\pi f_j)$ y $(f=\frac{j}{T})$, con lo cual $TS_z^2=\frac{T}{2}\sum_{j=1}^{T/2}\hat{R}_j^2$.

Se puede considerar la amplitud calculada para la frecuencia $(f_j)$ como un promedio de las amplitudes existentes en las frecuencias situadas en el intervalo $(f_j\pm \frac{1}{2}T)$. Con esto, se puede obtener el periodograma suavizado construyendo rectángulos con centro $(f_j$), base igual a $(1/T)$ y alturas $(I(f_j)=T\hat{R}_j/2)$.

```{r}
s=1/PeriodogramaEnergia2$freq[ubicacionenergia]

sin_est=diff(energia2,lag=round(s),differences=1)

plot.ts(sin_est, main="Serie sin estacionalidad", ylab='')
```

```{r}
# Frecuencia angular w=2*pi/s
frec_ang=(2*pi/183)

energia_copia=energia

#Fourier k=1 
energia_copia$sin = sin(c(1:5054)*(1*frec_ang))
energia_copia$cos = cos(c(1:5054)*(1*frec_ang))

#Fourier k=2 
energia_copia$sin2 = sin(c(1:5054)*(2*frec_ang))
energia_copia$cos2 = cos(c(1:5054)*(2*frec_ang))

#Fourier k=3 
energia_copia$sin3 = sin(c(1:5054)*(3*frec_ang))
energia_copia$cos3 = cos(c(1:5054)*(3*frec_ang))

linmodel_ciclo<-lm(Energia~1+sin+cos+sin2+cos2+sin3+cos3,data=energia_copia)
summary(linmodel_ciclo)

results_ciclo=linmodel_ciclo$fitted.values
results_ciclo<-as.data.frame(results_ciclo)
results_ciclo_ts<-ts(results_ciclo,start=c(2004,10,01),frequency=365.25)
```

En la @fig-energestacionalidad se presenta la serie original con la estimación de la componente estacional via componentes de Fourier y la serie sin estacionalidad. Se puede notar que las componentes de Fourier logran captar bien es cíclo estacional que tiene la serie, AGREGAR MAIS COZINHAS.

```{r}
#| label: fig-energestacionalidad
#| fig-cap: >
#|    Serie original con estamación de la componente estacional y serie sin estacionalidad.

# Series original
plot(energia2, main="Serie de tiempo del consumo de energía",
     cex.main=1.3,
     xlab="Tiempo ",
     ylab="Energía consumida",
     cex.lab=0.4)

# Estimación de la estacionalidad
lines(results_ciclo_ts,col="red")

# Serie sin estacionalidad
plot(energia2-results_ciclo_ts)
```
